* Advent of Code 2021

- https://adventofcode.com/2021

- https://2021-aoc-templates.util.repl.co/
- https://github.com/Bogdanp/awesome-advent-of-code

** Day 1: [[https://adventofcode.com/2021/day/1][Sonar Sweep]]

Base implementation is an iteration holding on to the current depth with an optional previous depth.

Other related implementations use partitioning and sliding window approaches.

- Kotlin https://www.youtube.com/watch?v=4A2WwniJdNc

Reasonable windowing implementation with count and a predicate rule.

#+begin_src kotlin
input.windowed(size: 2).count { (a, b) -> a < b }
#+end_src

- Ruby zip

** Day 2: [[https://adventofcode.com/2021/day/2][Dive!]]

- Python https://www.youtube.com/watch?v=e_PWnVXa_II&list=PLDeBWauprDRjbplIuyhVhXhIt7k4NuOad&index=2

- TypeScript

Most implementations just looked at a basic case lookup but looked at a position update rather than the conditional blocks.

Alternatively look at ~mover[dir](increment)(position)~:

#+begin_src typescript
const mover = {
  forward: (inc) => (p) => {
    p.x += inc;
    return p;
  },
  up: (inc) => (p) => {
    p.y -= inc;
    return p;
  },
  down: (inc) => (p) => {
    p.y += inc;
    return p;
  },
};
#+end_src

** Day 3: [[https://adventofcode.com/2021/day/3][Binary Diagnostic]]

** Day 4

** Day 5

** Day 6

** Day 7

** Day 8

** Day 9

** Day 10

** Day 11

** Day 12

** Day 13

** Day 14

** Day 15

** Day 16

** Day 17

** Day 18

** Day 19

** Day 20

** Day 21

** Day 22

** Day 23

** Day 24

** Day 25
